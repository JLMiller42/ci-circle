title: Continuous integration
tagline: Use CI
description: A sparkles course.
tags:
  - Continuous Integration
template:
    name: continuous-integration
    repo: ci-circle-template
before:
  # open issue 1 (welcome)
- type: createIssue
  title: Welcome
  body: 01.1_welcome.md

# Repo artifacts:
# 1. Issue: Welcome
# 2. PR: [title created by learner] - add initial circle config
# 3. PR: Configure the build
# 4. PR: Add external links to our docs
# 5. Issue: Continuous deployment
# 6. Issue: Congratulations

steps:

# 1 - Enable CI
- title: Enable continuous integration
  description: Enable continuous integration on this repository.
  event: status
  actions: 
  
  # waits for circleci to report a status, any status
  - type: gate
    left: '%payload.context%'
    operator: ===
    right: ci/circleci

  # validates they turned on CI
  - type: respond
    issue: Welcome
    with: 01.2_congratulations.md
  
  # asks learner to open new PR
  - type: respond
    issue: Welcome
    with: 01.3_next-steps.md

# 2 - Add new code
- title: Introduce the configuration file
  description: Learn how to use CI by introducing a configuration file.
  event: pull_request.opened
  actions:

  # introduces learner to the build status at the provider page (or the checks tab?), asks learner to commit a fix
  - type: respond
    with: 02.1_build-status.md

- title: Specify the docker image
  description: Specify the docker image
  event: pull_request.synchronize
  actions:

  - type: respond
    with: 02.2_new-status.md

# 4 - Merge your fix
- title: Merge the configuration
  description: Share your CI configuration with the team by merging it.
  event: pull_request.closed
  actions:

  # # merge master in so we have config
  - type: mergeBranch
    head: master
    base: custom-build

  # create a pull request customizing the config file
  - type: createPullRequest
    title: Configure the build
    body: 03.1_customize-the-build.md
    head: custom-build
    comments:
      # asks learner to add the link checker
      - 03.2_add-validation.md 
  
  # ask the learner to go to the next PR  
  - type: respond
    with: 02.3_go-to-customize-build.md


# 5 - Add validation
- title: Test your build
  description: Add automated builds for new commits
  event: pull_request.synchronize   # learner added a link checker
  actions:

  - type: respond
    with: 03.3_protect-branch.md # asks the learner to turn on branch protection, and then approve the PR

# 6 - Protect a branch based on the CI build status
- title: Protect a branch
  description: Require that CI returns a successful status before a PR can be merged.
  event: pull_request_review

  actions:

  - type: gate
    left: '%context.payload.review.state%'
    operator: ===
    right: approved

  # make sure learner turned on branch protection
  - type: octokit
    method: repos.getBranchProtection
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    branch: master

  # merge a broken buuild into the branch
  - type: mergeBranch
    head: timestamp
    base: custom-build

  # tell the learner the branch is protected and to fix the broken link
  - type: respond
    with: 03.4_branch-protected.md
    issue: '%payload.pull_request.number%'

    # 7 - Fix the broken build
- title: Fix the broken build
  description: Fix any broken links currently in our codebase.
  event: pull_request.synchronize
  actions:

# explaining waiting for the build, merge when done
  - type: respond
    with: 03.5_fixed.md

# 7 - Merge the PR
- title: Merge code with a successful build
  description: Merge your code.
  event: pull_request.closed

  actions:

  # merge master in so we have config
  - type: mergeBranch
    head: master
    base: add-links

  # introduces a new feature into the codebase, asks learner to add a unit test
  - type: createPullRequest #PR 4
    title: Add external links to docs
    body: 04.1_feature.md
    head: add-links 

  - type: respond
    with: 03.6_go-to-feature-pr.md # points learner to feature PR

# 8 - Add a unit test
- title: Add a link checker
  description: Check for broken links using CI
  event: pull_request.synchronize #PR 5 with the addition of a unit test

  actions:

  # tells the learner to merge their new PR with unit test
  - type: respond
    with: 04.2_fix-the-link.md

  # merge a broken link into the branch
  - type: mergeBranch
    head: add-a-link
    base: add-links

- title: Fix the broken link
  description: Fix the broken link
  event: pull_request.synchronize

  actions:

  - type: respond
    with: 04.3_merge.md

# 9 - Merge your unit test
- title: Merge the link checker
  description: Merge the test.
  event: pull_request.closed

  actions:

  # teaches the learner about continuous deployment with the introduction of the stage in the config
  - type: createIssue # PR 5: CD
    title: Continuous deployment
    body: 05.1_deploy.md

  # asks the learner to merge the deployment
  - type: respond
    issue: Add external links to docs
    with: 04.4_goto-deployment.md

# 10 - Deploy
- title: Deploy
  description: Add continuous deployment to your pipeline.
  event: deployment

  actions:

  # points the learner to the deployment, constrasts with continuous delivery
  - type: respond
    issue: Continuous deployment
    with: 05.2_see-deployed.md

  # @todo create additional PRs for continued study

  # final issue
  - type: createIssue
    title: Congratulations
    body: 06.1_congratulations.md